<?xml version="1.0"?>
<!-- 
/*
 * Copyright 2004 idega Software
 *
 * @author tryggvil
 *
 */
 -->

<project xmlns:j="jelly:core"
         xmlns:license="license"
         xmlns:util="jelly:util"
         xmlns:ant="jelly:ant"
         xmlns:artifact="artifact"
         xmlns:iwapp="jelly:com.idega.maven.application.IWApplicationTagLibrary">

  <!--==================================================================-->
  <!-- Default goal : Build an idegaweb bundle file                      -->
  <!--==================================================================-->    
  <goal name="iw-application" prereqs="iw-application:war" description="Build an idegaweb bundle file"/>

  <!--==================================================================-->
  <!-- Initializations                                                  -->
  <!--==================================================================-->    
  <goal name="iw-application:init"
    description="Initialize the file system and attain any necessary goals">

    <ant:available property="webSourcesPresent" type="dir"
      file="${idegaweb.application.src}"/>

    <ant:property name="idegaweb.application.final.name" 
      value="${pom.artifactId}-${pom.currentVersion}.war"/>
 
  </goal>
  
  <!--==================================================================-->
  <!-- Builds a war file                                                -->
  <!--==================================================================-->    
  <goal name="iw-application:war" prereqs="iw-application:webapp" description="Build an war (compressed idegaWeb Application) file">
    
    <ant:echo>Building bundle ${pom.artifactId}</ant:echo>

    <!-- build dependency list -->
    <j:set var="idegaweb.application.classpath" value=""/>
    <j:forEach var="dep" items="${pom.dependencies}">
      <j:if test="${dep.getProperty('war.manifest.classpath')=='true'}">
        <j:set var="idegaweb.application.classpath" value="${idegaweb.application.classpath} ${dep.artifact}"/>
      </j:if>
    </j:forEach>
    
    <ant:available property="idegaweb.application.manifest.available"
      file="${idegaweb.application.manifest}"/>

    <ant:mkdir dir="${idegaweb.application.build.dir}" />
    <ant:jar 
         destfile="${idegaweb.application.build.dir}/${idegaweb.application.final.name}"
         basedir="${idegaweb.application.webapp.dir}"         
         update="true"
         index="${idegaweb.application.index}">
      <ant:metainf dir="${licenseFile.canonicalFile.parent}">
        <ant:include name="${licenseFile.canonicalFile.name}"/>
      </ant:metainf>

      <j:if test="${idegaweb.application.manifest.available}">
        <ant:setProperty name="manifest" value="${idegaweb.application.manifest}" />
      </j:if>

      <ant:manifest>
        <j:set var="classPath" value="${idegaweb.application.classpath}"/>
        <j:if test="${!empty(classPath)}">
            <ant:attribute name="Class-Path" value="${idegaweb.application.classpath}"/>
        </j:if>

        <ant:attribute name="Built-By" value="${user.name}" />
        <ant:section name="${pom.package}">
          <ant:attribute name="Specification-Title" value="${pom.artifactId}" />
          <ant:attribute name="Specification-Version"
                     value="${pom.currentVersion}" />
          <ant:attribute name="Specification-Vendor"
                     value="${pom.organization.name}" />
          <ant:attribute name="Implementation-Title"
                     value="${pom.package}" />
          <ant:attribute name="Implementation-Version"
                     value="${pom.currentVersion}" />
          <ant:attribute name="Implementation-Vendor"
                     value="${pom.organization.name}" />
        </ant:section>
      </ant:manifest>

    </ant:jar>

  </goal>

  <!--==================================================================-->
  <!-- Builds an expanded bundle                                        -->
  <!--==================================================================-->    
  <goal name="iw-application:webapp" prereqs="iw-application:init,test:test,jar" 
    description="Build a bundle directory">

    <ant:echo>Assembling application ${pom.artifactId}</ant:echo>

    <ant:mkdir dir="${idegaweb.application.webapp.dir}"/>

    <j:set var="webapp.build.webinf" value="${idegaweb.application.webapp.dir}/WEB-INF"/>
    <ant:mkdir dir="${webapp.build.webinf}"/>

    <j:set var="webapp.build.lib" value="${webapp.build.webinf}/lib"/>
    <ant:mkdir dir="${webapp.build.lib}"/>
    
    <j:set var="webapp.build.tlds" value="${idegaweb.application.webapp.dir}/${idegaweb.application.tld.dir}"/>
    <ant:mkdir dir="${webapp.build.tlds}"/>
    
    <j:set var="webapp.build.classes" value="${webapp.build.webinf}/classes"/>
    <ant:mkdir dir="${webapp.build.classes}"/>

    <j:if test="${webSourcesPresent == 'true'}">
      <ant:copy todir="${idegaweb.application.webapp.dir}" preservelastmodified="true">
        <ant:fileset dir="${idegaweb.application.src}"
          includes="${idegaweb.application.src.includes}"
          excludes="${idegaweb.application.src.excludes}">
        </ant:fileset>
      </ant:copy>
    </j:if>
    
    <j:set var="webapp.build.webxml" value="${webapp.build.webinf}/web.xml"/>
    
    <util:available file="${idegaweb.application.webxml}">
      <ant:copy file="${idegaweb.application.webxml}"
        tofile="${webapp.build.webxml}"
        overwrite="true" />
    </util:available>

	<ant:mkdir dir="${idegaweb.application.idegaweb.build.dir}"/>
	<ant:mkdir dir="${idegaweb.application.bundles.build.dir}"/>
	<ant:mkdir dir="${idegaweb.application.properties.build.dir}"/>
	
    <j:forEach var="lib" items="${pom.artifacts}">
      <j:set var="dep" value="${lib.dependency}"/>

         <j:if test="${dep.type =='iwbar'}">
         	<!--extract the bundle file-->
           	<ant:copy todir="${idegaweb.application.bundles.build.dir}" file="${lib.path}"/>
    			<!--extract the bundle file-->
    			<ant:unjar 
         		dest="${idegaweb.application.bundles.build.dir}/${dep.artifactId}.bundle"
         		src="${idegaweb.application.bundles.build.dir}/${dep.artifactId}-${dep.version}.iwbar" />
			
			<!--delete the iwbar file-->
			<ant:delete file="${idegaweb.application.bundles.build.dir}/${dep.artifactId}-${dep.version}.iwbar" />

	         <!--Copy all .jars from the bundle to the common WEB-INF/lib -->
	         <ant:move todir="${webapp.build.lib}" >
	         	<ant:fileset
	         		dir="${idegaweb.application.bundles.build.dir}/${dep.artifactId}.bundle/WEB-INF/lib/">
	         		<ant:filename name="**/*.jar"/>
	         	</ant:fileset>
	         </ant:move>
	         
	         <!--Copy all .tlds from the bundle to the common WEB-INF/tld -->
	         <j:set var="idegaweb.application.bundle.tldsdir" value="${idegaweb.application.bundles.build.dir}/${dep.artifactId}.bundle/WEB-INF/tld/"/>
	         <util:available file="${idegaweb.application.bundle.tldsdir}">
		         <ant:move todir="${webapp.build.tlds}" >
		         	<ant:fileset
		         		dir="${idegaweb.application.bundle.tldsdir}">
		         		<ant:filename name="**/*.tld"/>
		         	</ant:fileset>
		         </ant:move>
	         </util:available>      
			
         </j:if> 
      <j:set var="targetPath" value="${dep.getProperty('war.target.path')}"/> 
      <j:if test="${!empty(targetPath)}">
        <ant:copy todir="${idegaweb.application.webapp.dir}/${targetPath}" file="${lib.path}"/>
      </j:if>
    </j:forEach>
	
	<!-- Merge all bundle web.xmls to the common WEB-INF/web.xml -->
	<iwapp:mergewebxmls tofile="${webapp.build.webxml}" 
		bundlesfolder="${idegaweb.application.bundles.build.dir}"/>


	<!-- Set and copy WEB-INF/faces-config.xml -->
	<j:set var="webapp.build.facesconfigxml" value="${webapp.build.webinf}/faces-config.xml"/>
	<j:set var="idegaweb.application.facesconfigxml" value="${idegaweb.application.src}/WEB-INF/faces-config.xml" />
	<util:available file="${idegaweb.application.facesconfigxml}">
      <ant:copy file="${idegaweb.application.facesconfigxml}"
        tofile="${webapp.build.facesconfigxml}"
        overwrite="true" />
    </util:available>
	<!-- Merge all bundle faces-config.xmls to the common WEB-INF/faces-config.xml -->
	<iwapp:mergefacesconfigs tofile="${webapp.build.facesconfigxml}" 
		bundlesfolder="${idegaweb.application.bundles.build.dir}"/>		
<!--
    <util:available file="${maven.build.dest}">
      <ant:copy todir="${webapp.build.classes}">
        <ant:fileset dir="${maven.build.dest}"
          includes="${idegaweb.application.classes.includes}"
          excludes="${idegaweb.application.classes.excludes}">
        </ant:fileset>
      </ant:copy>
    </util:available>
-->

  </goal>

  <!--==================================================================-->
  <!-- Install the bundle in the local repository                          -->
  <!--==================================================================-->    
  <goal name="iw-application:install"
        prereqs="iw-application:war"
        description="Install the war in the local repository">
     
     <artifact:install
        artifact="${idegaweb.application.build.dir}/${idegaweb.application.final.name}"
        type="war"
        project="${pom}"/> 
  
  </goal>
  
  <!--==================================================================-->
  <!-- Install the snapshot version of the war in the local repository  -->
  <!--==================================================================-->      
  <goal name="iw-application:install-snapshot"
        prereqs="iw-application:war" 
        description="Install the snapshot version of the war in the local repository">
        
      <artifact:install-snapshot
        artifact="${idegaweb.application.build.dir}/${idegaweb.application.final.name}"
        type="war"
        project="${pom}"/> 
        
  </goal>

  <!--==================================================================-->
  <!-- Deploys the war to the remote repository                         -->
  <!--==================================================================-->      
  <goal name="iw-application:deploy" 
        prereqs="iw-application:war" 
        description="Deploys the bundle to the remote repository">

     <artifact:deploy
        artifact="${idegaweb.application.build.dir}/${idegaweb.application.final.name}"
        type="war"
        project="${pom}"/>   
        
  </goal>      
        
  <!--==================================================================-->
  <!-- Deploys the snapshot of the war to the remote repository         -->
  <!--==================================================================-->      
  <goal name="iw-application:deploy-snapshot" 
        prereqs="iw-application:war"
        description="Deploys the snapshot version of  the bundle to remote repository">  

     <artifact:deploy-snapshot
        artifact="${idegaweb.application.build.dir}/${idegaweb.application.final.name}"
        type="war"
        project="${pom}"/>    
        
  </goal>
  
  
  <!--==================================================================-->
  <!-- Clean                                                            -->
  <!--==================================================================-->  
    <goal name="iw-application:clean"
        prereqs="iw-application:init"
        description="Remove all artifacts created by war plugin">  

      <!-- TODO: delete also snapshot and md5 files -->
      <j:if test="${context.getVariable('idegaweb.application.webapp.dir') != context.getVariable('idegaweb.application.src')}">
        <ant:delete dir="${idegaweb.application.webapp.dir}"/>
      </j:if>
      <ant:delete file="${idegaweb.application.build.dir}/${idegaweb.application.final.name}" quiet="true" failonerror="false"/>          
    </goal>
    
  <!--==================================================================-->
  <!-- In-place deployment of the web application                       -->
  <!--==================================================================-->  
  <goal name="iw-application:inplace"
    description="Deploy a webapp into idegaweb.application.src - in particular setting up WEB-INF/lib and WEB-INF/classes">
    <j:set var="idegaweb.application.webapp.dir" value="${idegaweb.application.src}"/>
    <attainGoal name="iw-application:webapp"/>
  </goal> 

  <!--==================================================================-->
  <!-- Generate Eclipse projectSet file                                  -->
  <!--==================================================================-->    
  <goal name="iw-application:generate-eclipse-projectset"
    description="Generate Eclipse projectSet file">
  
    <ant:echo>Creating ${basedir}/projectSet.psf ...</ant:echo>                
    <j:file name="${basedir}/projectSet.psf" prettyPrint="true" outputMode="xml" xmlns="dummy">
      <j:import file="${plugin.resources}/templates/projectSet.jelly" inherit="true"/>    
    </j:file>
    
  </goal>



  <!--==================================================================-->
  <!-- Special no-op goal which can be used by other plugin which need  -->
  <!-- to get access to any of this plugin's property. This is          -->
  <!-- temporary, until we get explicit plugin dependencies.            -->
  <!--==================================================================-->    
  <goal name="iw-application:load"/>

</project>

